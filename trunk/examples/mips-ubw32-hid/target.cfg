ARCH		= mips
MODULES		= microchip runtime stream #kernel random mem timer buf uart crc net regexp tcl

# Maximum optimization
#OPTIMIZE	= -O3 -DNDEBUG

# Smallest size
#OPTIMIZE	= -Os -DNDEBUG

# Debug mode, enable asserts
OPTIMIZE	= -O1 -g

# We use memcpy etc. with slightly different args,
# so we need to use no-builtin option to prevent conflict.
BINDIR		= /usr/local/mipsel441/bin
CC		= $(BINDIR)/mipsel-elf32-gcc -mips32r2 -Wall -g
CFLAGS		= $(OPTIMIZE) -I$(OS)/sources -DMIPS32 -DPIC32MX -DPIC32MX640F512 \
		  -Werror -fno-builtin -fsigned-char -DRECURSIVE_LOCKS=0 -I$(TARGET)
ASFLAGS		= -I$(OS)/sources -DMIPS32 -DPIC32MX -DPIC32MX640F512
DEPFLAGS	= -MT $@ -MD -MP -MF .deps/$*.dep
LDFLAGS		= -nostdlib startup.o -T ../mips-ubw32/using-bootloader.ld
LIBS		= -L$(TARGET) -luos -lgcc
STARTUP		= startup-pic32.S
AR		= $(BINDIR)/mipsel-elf32-ar
SIZE		= $(BINDIR)/mipsel-elf32-size
OBJDUMP		= $(BINDIR)/mipsel-elf32-objdump -mmips:isa32r2 -D
OBJCOPY		= $(BINDIR)/mipsel-elf32-objcopy

# CPU frequency
CFLAGS		+= -DKHZ=80000

#
# USB configuration
#
CFLAGS		+= -DUSB_SUPPORT_DEVICE

CFLAGS		+= -DUSB_NUM_STRING_DESCRIPTORS=3

CFLAGS		+= -DUSB_SPEED_OPTION=USB_FULL_SPEED
#CFLAGS		+= -DUSB_SPEED_OPTION=USB_LOW_SPEED

CFLAGS		+= -DUSB_POLLING
#CFLAGS		+= -DUSB_INTERRUPT

CFLAGS		+= -DUSB_PULLUP_OPTION=USB_PULLUP_ENABLE
#CFLAGS		+= -DUSB_PULLUP_OPTION=USB_PULLUP_DISABLED

#CFLAGS		+= -DUSB_INTERRUPT_LEGACY_CALLBACKS
CFLAGS		+= -DUSB_ENABLE_ALL_HANDLERS
#CFLAGS		+= -DUSB_ENABLE_SUSPEND_HANDLER
#CFLAGS		+= -DUSB_ENABLE_WAKEUP_FROM_SUSPEND_HANDLER
#CFLAGS		+= -DUSB_ENABLE_SOF_HANDLER
#CFLAGS		+= -DUSB_ENABLE_ERROR_HANDLER
#CFLAGS		+= -DUSB_ENABLE_OTHER_REQUEST_HANDLER
#CFLAGS		+= -DUSB_ENABLE_SET_DESCRIPTOR_HANDLER
#CFLAGS		+= -DUSB_ENABLE_INIT_EP_HANDLER
#CFLAGS		+= -DUSB_ENABLE_EP0_DATA_HANDLER
#CFLAGS		+= -DUSB_ENABLE_TRANSFER_COMPLETE_HANDLER

# Valid Options: 8, 16, 32, or 64 bytes.
# Using larger options take more SRAM, but
# does not provide much advantage in most types
# of applications.  Exceptions to this, are applications
# that use EP0 IN or OUT for sending large amounts of
# application related data.
CFLAGS		+= -DUSB_EP0_BUFF_SIZE=8

# For tracking Alternate Setting
CFLAGS		+= -DUSB_MAX_NUM_INT=1

#
# Device class usage
#
CFLAGS		+= -DUSB_USE_HID

#
# Endpoints allocation
#
CFLAGS		+= -DUSB_MAX_EP_NUMBER=2

# The maximum transfer size of EP1
CFLAGS		+= -DUSB_MAX_DATA_SIZE_EP1=64
CFLAGS		+= -DUSB_NUM_MESSAGES_EP1=1

CFLAGS		+= -DHID_EP=1

CFLAGS		+= -DHID_INTF_ID=0x00
CFLAGS		+= -DHID_UEP=UEP1
CFLAGS		+= -DHID_BD_OUT=USB_EP_1_OUT
CFLAGS		+= -DHID_INT_OUT_EP_SIZE=3
CFLAGS		+= -DHID_BD_IN=USB_EP_1_IN
CFLAGS		+= -DHID_INT_IN_EP_SIZE=3
CFLAGS		+= -DHID_NUM_OF_DSC=1
CFLAGS		+= -DHID_RPT01_SIZE=47

# The number of bytes in each report,
# calculated from Report Size and Report Count in the report descriptor:

CFLAGS		+= -DHID_INPUT_REPORT_BYTES=2
CFLAGS		+= -DHID_OUTPUT_REPORT_BYTES=2
CFLAGS		+= -DHID_FEATURE_REPORT_BYTES=2
CFLAGS		+= -DHID_INTF_ID=0x00
CFLAGS		+= -DHID_NUM_OF_DSC=1
