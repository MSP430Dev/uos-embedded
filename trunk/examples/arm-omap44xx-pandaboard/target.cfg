ARCH		= arm
MODULES		= runtime stream #random kernel timer uart adc gpanel
#mem regexp buf net crc snmp tcl

# Maximum optimization
#OPTIMIZE        = -Os -DNDEBUG

# Debug mode, enable asserts
OPTIMIZE       = -O -g

# We use memcpy etc. with slightly different args,
# so we need to use no-builtin option to prevent conflict.
BINDIR		= /usr/local/arm-eltools/bin
TOOLS_PREFIX	= arm-none-eabi-
CC		= $(BINDIR)/$(TOOLS_PREFIX)gcc -Wall -g
CFLAGS		= -DARM_OMAP44XX -fno-builtin -fsigned-char \
		  $(OPTIMIZE) -I$(OS)/sources -DKHZ=47923
ASFLAGS		= -I$(OS)/sources
DEPFLAGS	= -MT $@ -MD -MP -MF .deps/$*.dep
LDFLAGS		= -nostdlib -T $(TARGET)/ldscript.x $(TARGET)/startup.o
LIBS		= -L$(TARGET) -luos -lgcc
STARTUP		= startup-omap44xx.S
AR		= $(BINDIR)/$(TOOLS_PREFIX)ar
SIZE		= $(BINDIR)/$(TOOLS_PREFIX)size
OBJDUMP		= $(BINDIR)/$(TOOLS_PREFIX)objdump
OBJCOPY		= $(BINDIR)/$(TOOLS_PREFIX)objcopy

# Generate map-files
CFLAGS          += -Wl,-Map=$<.map

