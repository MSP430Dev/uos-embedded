#summary uOS kernel

= Ядро системы =

Ядро системы оперирует объектами двух основных типов: 'задача' и 'мутекс'.

_*Задача*_ представляет собой поток управления (thread).
Каждая задача имеет отдельный стек.

В процессе выполнения задача может _*захватывать*_
необходимые мутексы. При попытке захватить мутекс,
занятый другой задачей, задача _*блокируется*_ до момента
_*освобождения*_ мутекса. Таким образом, каждая задача может
находиться в одном из двух состояний: выполняемом или
заблокированном.

Каждая задача имеет целочисленную характеристику - _*приоритет*_.
Если в выполняемом состоянии находится более одной задачи,
будет выполняться задача с более высоким (большим) приоритетом.
Приоритет задается при создании задачи и может изменяться
по ходу выполнения. Нулевой, самый низкий приоритет присваивается
фоновой задаче.

Для облегчения отладки каждая задача имеет также _*имя*_ - текстовую строку.

_*Мутекс*_ представляет собой метод взаимодействия задач.
Можно считать мутексы обобщением семафоров и почтовых ящиков.
Кроме захвата и освобождения мутексов, задачи имеют возможность
обмениваться сообщениями. Задача (или несколько задач) может
_*ожидать сообщения*_ от мутекса, при этом задача блокируется.
Другая задача может _*послать сообщение*_ мутексу,
при этом все задачи, ожидающие сообщения от этого мутекса,
переходят в выполняемое состояние и получают посланное сообщение.
Посылающая задача не блокируется.
Если ни одна задача не ждет сообщения, оно теряется.

В качестве сообщения используется произвольный указатель,
обычно ссылающийся на структуру данных, содержащую требуемую информацию.

Этот же механизм сообщений применяется для обработки
_*аппаратных прерываний*_. При захвате мутекса задача может
присвоить ему номер аппаратного прерывания, и ожидать сообщения.
При возникновении прерывания задача получит сообщение (пустое).

Для каждого аппаратного прерывания, требующего обслуживания,
следует создать отдельную задачу. Такая задача обычно
в бесконечном цикле ожидает сообщения о прерывании, выполняет
необходимые действия с аппаратурой и посылает сообщения другим
мутексам, содержащие результаты обработки.

  * [kernel_start Старт системы]
  * [kernel_tasks Задачи]
  * [kernel_mutexes Мутексы]
  * [kernel_irqs Прерывания]
