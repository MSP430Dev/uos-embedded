#summary uOS - встраиваемая операционная система.

= uOS - встраиваемая операционная система =
uOS представляет собой переносимую масштабируемую встраиваемую операционную систему для промышленных применений и систем реального времени. Свободная лицензия ([license_ru GPL с дополнением]) позволяет использовать uOS в коммерческих приложениях.

Исходные тексты uOS и дополнительное программное обеспечение можно
[download_ru скачать здесь].

Операционная система uOS может применяться в промышленных
и коммуникационных системах с самым широким диапазоном ресурсов,
от 8-битных микроконтроллеров с 16 килобайтами ПЗУ и 2 килобайтами ОЗУ,
до 32-битных микропроцессоров. Система поддерживает неограниченное
количество задач, приоритетов и мутексов.

Система uOS построена по модульному принципу. Базовый модуль ядра
занимает около 2 килобайт ПЗУ и 200 байт ОЗУ. Набор используемых модулей
может наращиваться в соответствии с потребностями конкретного применения.
В перечень модулей входят драйверы устройств, диспетчер памяти, сетевые
протоколы.

При разработке основной упор делался на простоту и эффективность реализации, а также переносимость. С целью облегчения переноса на другие архитектуры микропроцессоров
машинно-зависимая часть ядра uOS выделена в отдельный блок.

Поддерживаемые архитектуры:
 * ARM: Samsung S3C4530A, Atmel AT91SAM7. Режимы ARM и Thumb.
 * Texas Instruments MSP430.
 * MIPS32: Элвис МС-24.
 * Atmel AVR.
 * Intel i386: стандартные PC-совместимые компьютеры c шиной PCI и видеоадаптером VESA. Используется загрузчик Grub 0.97.
 * Linux 386, в режиме виртуальной машины, с поддержкой TCP/IP. Может применяться для отладки машинно-независимых частей разрабатываемых систем: алгоритмов обработки данных, диспетчеров памяти, сетевых протоколов.

Характеристики uOS:
 * Вытесняющая многозадачность
 * Отсутствие ограничений на количество запускаемых задач
 * Отсутствие ограничений на количество уровней приоритета
 * Единый механизм синхронизации "мутекс", аналог mutex и mailbox, для задач и прерываний
 * Наследование приоритета (priority inheritance)
 * Возможность "быстрой" обработки прерываний, без задействования механизма синхронизации
 * Простота и расширяемость системы за счет организации в виде независимых модулей
 * Малый размер обязательной части системы
 * Высокая степень переносимости благодаря четкому выделению архитектурозависимых частей
 * Возможность обнаружения переполнения стека
 * Сетевой стек TCP/IP v4, включая протоколы Telnet и NNTP
 * Модуль протокола SNMP для применения в качестве встраиваемого агента
 * Интерпретатор языка Embedded TCL для приложений, требующих командной строки
 * Свободные средства разработки (GCC), в том числе для платформы Windows
 * Набор примеров для каждой поддерживаемой архитектуры

Документация:
 * [kernel_ru Ядро системы]
 * [modules_ru Базовые модули]
 * Системная библиотека
 * Дополнительные модули
 * [project_ru Установка uOS и создание проекта]
 * [porting_ru Перенос на другие архитектуры]

Дополнительные материалы:
 * [coding_style_ru Стиль кодирования] для проекта uOS, черновик.
 * [future_plans_ru Мысли] по поводу следующей версии.
 * Установка GCC для архитектур [gcc_avr_ru Atmel AVR], [gcc_arm_ru ARM], [gcc_msp430_ru MSP430], [gcc_intel_ru Intel 386/Pentium].
 * [http://uos-embedded.googlecode.com/files/nanox-refman-2004-07-24.pdf nanox-refman-2004-07-24.pdf] - документация для Nano-X версии 0.91.
 * [screenshots_ru Пример графической системы] на процессоре i386 с оконным интерфейсом Nano-X.
