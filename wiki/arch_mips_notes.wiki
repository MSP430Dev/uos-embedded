= Особенности архитектуры MIPS =

Особенности ассемблера GNU as для MIPS: http://sourceware.org/binutils/docs/as/MIPS_002dDependent.html

Распределение регистров MIPS:
|| *Регистр* || *Номер* || *Применение* ||
|| $zero     || 0       || Константа 0 ||
|| $at 	     || 1       || Используется ассемблером для псевдокоманд ||
|| $v0...$v1 || 2...3   || Результат функции, вычисление выражений ||
|| $a0...$a3 || 4...7   || Аргументы функции ||
|| $t0...$t7 || 8...15  || Несохраняемые регистры ||
|| $s0...$s7 || 16...23 || Сохраняемые регистры ||
|| $t8...$t9 || 24...25 || Несохраняемые регистры ||
|| $k0...$k1 || 26...27 || Используются обработчиком иключений и прерываний ||
|| $gp 	     || 28      || Указатель на сегмент данных ||
|| $sp 	     || 29      || Указатель стека ||
|| $fp 	     || 30      || Указатель фрейма функции ||
|| $ra 	     || 31      || Адрес возврата ||

При вызове функции первые четыре параметра передаются в регистрах $a0...$a3.
Остальные помещаются в стек в обратном порядке, последний параметр имеет
больший адрес. Функция возвращает значение в регистре $v0 или регистрах
$v0...$v1 (в случае `long long` или `double`).

Параметры оператора `asm`:
|| *Символ* || *Режим MIPS*                     ||
||  r       || Операнд в регистре		||
||  i       || Константа целого типа		||

Подробнее здесь: http://gcc.gnu.org/onlinedocs/gcc/Constraints.html

При прерывании, состояние регистров сохраняется в стеке текущей задачи:
|| *Стек* ||
||  ---   ||
||  ---   || <--- Значение $sp до прерывания ||
||  EPC   ||
|| STATUS ||
||  LO    ||
||  HI    ||
||  $ra   ||
||  $fp   ||
||  $gp   ||
||  $25   ||
||  $24   ||
||  ...   ||
||  $1    ||
||  $0    || <--- Новое значение $sp ||
||  ---   ||